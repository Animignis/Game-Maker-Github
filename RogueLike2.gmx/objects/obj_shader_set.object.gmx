<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>101</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>holoTime = 0;
wobTime = 0;

holoTimerCap = 4;
holoTimer = holoTimerCap;

wobTimerChance = 2/50;
wobTimerMin = room_speed * 0.5;
wobTimerMax = room_speed * 1.5;
wobTimer = -1;

surf = surface_create(2048, 2048);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (holoTimer &gt; 0) {
    holoTimer--;
}
else if (holoTimer == 0) {
    holoTime++;
    holoTimer = holoTimerCap;
}
/*
if (wobTimer &gt; 0) {
    wobTimer--;
    wobTime++;
}
else if (wobTimer == 0) {
    wobTimer = -1;
    wobTime = 0;
}
else {
    var roll = random(1);
    if (roll &lt;= wobTimerChance) {
        wobTimer = random_range(wobTimerMin, wobTimerMax);
    }
}
*/

if (!surface_exists(surf)) {
    surf = surface_create(1024, 1024);
}
if (surface_exists(surf)) {
    surface_set_target(surf);
    draw_set_blend_mode(bm_normal);
    draw_clear(make_color_rgb(0, 255, 255));
    draw_set_blend_mode(bm_subtract);
    if (instance_exists(obj_player)) {
        with(obj_cave) { DrawCaveLight(); }
    }
    draw_set_blend_mode(bm_normal);
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ShaderHoloSet();
if (surface_exists(surf)) {
    draw_surface(surf, view_xview - CELL_SIZE, view_yview - CELL_SIZE);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
