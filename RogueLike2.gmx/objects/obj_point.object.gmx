<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_point</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = random(360);
value = 100;
myspeed = random_range(4, 8);
speed = myspeed;
acel = 0.16;
foundPlayer = false;
magnetRad = CELL_SIZE * 1.75;

collisionDist = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat (1)
{
var ran;
ran=random(360);

part_particles_create(ps,

x+lengthdir_x(random(8),ran),
y+lengthdir_y(random(8),ran),

obj_partman.pt_explode_bullet,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(obj_player) &gt; 0) {
    if (foundPlayer) {
        speed += acel;
        if (speed &gt; myspeed * 2) {
            speed = myspeed * 2;
        }
        direction = point_direction(x,y,obj_player.x,obj_player.y);
        if (point_distance(x, y, obj_player.x, obj_player.y) &lt;= speed) {
            score = score + value;
            instance_destroy();
        }
    }
    else {
        if (speed &gt; 0) {
            speed -= acel
        }
        else {
            speed = 0;
        }
        
        if (point_distance(x,y,obj_player.x,obj_player.y) &lt;= magnetRad ) {
            foundPlayer = true;
        }
        move_bounce_solid(false);
    }
}
else {
    instance_destroy();
}

if (!foundPlayer &amp;&amp; speed &gt; 0) {
    var checkDist = collisionDist + speed;
    
    var ax = x + lengthdir_x(checkDist, direction);
    var ay = y + lengthdir_y(checkDist, direction);
    var bx = x + lengthdir_x(checkDist, direction + 45);
    var by = y + lengthdir_y(checkDist, direction + 45);
    var cx = x + lengthdir_x(checkDist, direction - 45);
    var cy = y + lengthdir_y(checkDist, direction - 45);
    var a = CheckTile(ax, ay);
    var b = CheckTile(bx, by);
    var c = CheckTile(cx, cy);
    
    if (b &amp;&amp; c) {
        speed = 0;
        direction -= 180;
    }
    else if (b &amp;&amp; !c) {
        direction = floor(direction / 45) * 45;
        direction -= 45;
    }
    else if (c &amp;&amp; !b) {
        direction = floor(direction / 45) * 45;
        direction += 45;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
