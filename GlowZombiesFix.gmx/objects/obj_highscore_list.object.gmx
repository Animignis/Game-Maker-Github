<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Vars

//Status
ready = false;

//Highscore display data
names = ds_list_create();
scores = ds_list_create();

//Update
req_id = -1;
event_user(15);

//Timeout message
ih_timeout = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cleanup
ds_list_destroy(names);
ds_list_destroy(scores);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///timed out, display message
ih_timeout = show_message_async("Error: Request timed out.");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///restart game upon acknowledge of timeout
if (ds_map_find_value(async_load, "id") == ih_timeout) {
    game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Done Loading
if (ds_map_find_value(async_load, "id") == req_id) {
    if (ds_map_find_value(async_load, "status") &gt;= 0) {
        //Decode JSON
        var json, json_data;
        json = ds_map_find_value(async_load, "result");
        json_data = jso_decode_list(json);
        
        //get names and scores
        var i, entries, name, _score;
        entries = ds_list_size(json_data);
        for (i = 0; i &lt; entries; i++) {
            name = jso_list_lookup(json_data, i, "name");
            _score = jso_list_lookup(json_data, i, "score");
            ds_list_add(names, name);
            ds_list_add(scores, _score);
        }
        
        //Done
        jso_cleanup_list(json_data);
        ready = 1;
        req_id = -1;
        
        //stop timeout alarm
        alarm[0] = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start loading
ready = false;
ds_list_clear(names);
ds_list_clear(scores);
req_id = http_get(server_root + "/highscores.json");
alarm[0] = request_timeout * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the highscore table if loaded
if (ready) {
    draw_set_font(fnt_instruct);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_color(c_white);
    var i, xx, yy, entries, name, _score, str;
    entries = ds_list_size(names);
    str = "";
    xx = view_xview + view_wview/2;
    yy = view_yview + view_hview/2;
    for (i=0; i&lt;entries; i+=1) {
        name = ds_list_find_value(names, i);
        _score = ds_list_find_value(scores, i);
        str += name + ": " + string(_score) + "#";
    }
    str += "##press R to restart the game";
    if (!obj_playerRespawn.submitted) {
        str += "##press ENTER to submit score online";
    }
    draw_text(xx, yy, str);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
}
//Draw a "Loading..." message if not loaded yet
else {
    draw_set_font(fnt_score);
    draw_set_valign(fa_top);
    draw_set_halign(fa_center);
    draw_text(view_xview + view_wview * 0.5, view_yview, "Loading...");
}
/*
//draw_self();
draw_set_font(fnt_score);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
//Draw the highscore table if loaded
if (ready) {
    var i, entries, name, _score;
    entries = ds_list_size(names);
    for (i=0; i&lt;entries; i+=1) {
        name = ds_list_find_value(names, i);
        _score = ds_list_find_value(scores, i);
        draw_text(view_xview, view_yview, 
            string_repeat("#", i) + name);
        draw_text(view_xview + view_wview * 0.5, view_yview,
            string_repeat("#", i) + string(_score));
    }
}
//Draw a "Loading..." message if not loaded yet
else {
    draw_text(view_xview, view_yview, "Loading...");
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ready) {
    game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>36,53</point>
    <point>53,53</point>
  </PhysicsShapePoints>
</object>
