<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rmax = 100;

bound_l = 320;
bound_r = 1632;
bound_up = 352;
bound_down = 1664;

bound_xoff = -view_wview * 0.1;
bound_yoff = -view_hview * 0.1;

spawnChance = 0.75;
spawnChanceAdj = 0.01;
spawnChanceCap = 3 * spawnChance;

zombCoef = 0.5;
chompCoef = 0.2;
blarghCoef = 0.05;
shadeCoef = 0.1;
globCoef = 0.15;

zombChance = zombCoef * spawnChance;
chompChance = chompCoef * spawnChance;
blarghChance = blarghCoef * spawnChance;
shadeChance = chadeCoef * spawnChance;
globChance = globCoef * spawnChance;

chanceTimer = 15 * room_speed;
alarm[0] = chanceTimer;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spawnChance += spawnChanceAdj;

if (spawnChance &gt; spawnChanceCap) {
    spawnChance = spawnChanceCap;
}

zombChance = zombCoef * spawnChance;
chompChance = chompCoef * spawnChance;
blarghChance = blarghCoef * spawnChance;
shadeChance = chadeCoef * spawnChance;
globChance = globCoef * spawnChance;

alarm[0] = chanceTimer;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var r = random(rmax);
var obj = -1;

if (r &lt;= zombChance) {
    obj = obj_zomb;
}
else if (r &lt;= zombChance + chompChance) {
    obj = obj_chomp;
}
else if (r &lt;= zombChance + chompChance + blarghChance) {
    obj = obj_blargh;
}
else if (r &lt;= zombChance + chompChance + blarghChance + shadeChance) {
    obj = obj_shade;
}

if (obj != -1) {
    var xx, yy, bnd_l, bnd_r, bnd_up, bnd_down;
    bnd_l = obj_playerRespawn.xx - view_wview*0.5 - bound_xoff;
    bnd_r = obj_playerRespawn.xx + view_wview*0.5 + bound_xoff;
    bnd_up = obj_playerRespawn.yy - view_hview*0.5 - bound_yoff;
    bnd_down = obj_playerRespawn.yy + view_hview*0.5 + bound_yoff;
    if (bnd_l &lt; bound_l) {
        bnd_l = bound_l;
    }
    if (bnd_r &gt; bound_r) {
        bnd_r = bound_r;
    }
    if (bnd_up &lt; bound_up) {
        bnd_up = bound_up;
    }
    if (bnd_down &gt; bound_down) {
        bnd_down = bound_down;
    }
    do {
    xx = random_range(bnd_l, bnd_r);
    yy = random_range(bnd_up, bnd_down);
    } until (!collision_circle(xx, yy, 64, obj_wall, false, true)
        &amp;&amp; !collision_circle(xx, yy, 160, obj_player, false, true));
    instance_create(xx, yy, obj);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
